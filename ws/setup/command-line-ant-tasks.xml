<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2004 Sun Microsystems, Inc.  All rights reserved.  You may not modify, use, reproduce, or distribute this software except in compliance with the terms of the License at: 
 http://developer.sun.com/berkeley_license.html
 $Id: command-line-ant-tasks.xml,v 1.1 2005-11-01 05:59:40 gmurray71 Exp $ -->


<!-- common.xml: Referenced by various build.xml files, this file
     defines common properties, paths, and also contains some common targets. 
     root.dir property must be set before this file is included. 
     This file automatically sets the following properties: 
       build.dir, build.classes.dir
     To change the value of these properties for your project, you need to set them
     BEFORE you include this file. You can do that by defining the property in 
     <user.home>/bpcatalog.properties, build.properties, <root.dir>/build.properties
     or in the build.xml file.
-->
<project name="command-line-ant-tasks" default="default">

  <!-- include user specific build properties -->
  <property file="${user.home}/build.properties"/>

    <!-- include user specific build properties -->
  <property file="build.properties"/>
  
    <!-- include netbeans properties -->
  <property file="nbproject/project.properties"/>

  <import file="${ant.file.command-line-ant-tasks}/../app-server-ant.xml"/>

  <property name="home.dir" value="."/>

  <!-- The destination directory for all the generated files -->
  <property name="build.dir" value="${home.dir}/build"/>
  
  <!-- The destination directory for all the compiled classes -->
  <property name="build.classes.dir" value="${build.dir}/classes"/>

  <property name="src.dir" value="${home.dir}/src/java"/>
  <property name="src.web" value="${home.dir}/web"/>
  <property name="src.conf" value="${home.dir}/src/conf"/>
  <property name="web.build.dir" value="${build.dir}/web"/>
  <property name="jar.build.dir" value="${build.dir}/jar"/>
  <property name="war.build.dir" value="${build.dir}/war"/>
  <property name="ejb.build.dir" value="${build.dir}/ejb"/>
  <property name="ear.build.dir" value="${build.dir}/ear"/>
  <property name="dist.dir" value="${home.dir}/dist"/>
  
  <!-- default name of the module file -->
  <property name="module.name" value="${ant.project.name}"/>
  <condition property="app.module" value="${build.dir}/${module.name}.war">
    <isset property="is.war.module"/>
  </condition>
  <condition property="app.module" value="${build.dir}/${module.name}.jar">
    <isset property="is.ejb-jar.module"/>
  </condition>
  <condition property="app.module" value="${build.dir}/${module.name}.ear">
    <isset property="is.ear.module"/>
  </condition>
  <condition property="app.module" value="${build.dir}/${module.name}.jar">
    <isset property="is.jar.module"/>
  </condition>


  <!-- Cleans the build directory -->
  <target name="clean" depends="-pre-clean" description="Removes the build and dist directory">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
  </target>

 <target name="compile" depends="-pre-compile">
    <echo>Compiling ${module.name}</echo>
   <path id="classpath">
     <pathelement location="${build.classes.dir}"/>
     <pathelement location="${extra.classpath}"/>
     <pathelement location="${extra2.classpath}"/>
     <path refid="javaee.classpath" />
   </path>
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.dir}"
	   source="${default.javac.source}"
	   target="${default.javac.target}"
           excludes="${javac.excludes}"
           destdir="${build.classes.dir}"
           includes="**">
     <classpath refid="classpath"/>
    </javac>
  </target>
  
  <target name="getBrowser" unless="default.browser">
  
     <condition property="browser" value="rundll32">
        <os family="windows"/>
     </condition>
     
     <condition property="browser" value="/usr/bin/open">
       <and>
         <os family="mac"/>
       </and>
     </condition>

    <property name="default.browser" value="${browser}"/>
  </target>
  
  <!-- This target launches a browser for the specified URL -->
  <target name="launch" depends="getBrowser">
    <fail unless="module.name" message="The property module.name must be set before invoking this target. Otherwise there is no application to launch."/>
    <condition property="extra-args" value="url.dll,FileProtocolHandler">
      <os family="windows"/>
    </condition>
    <condition property="extra-args" value="">
      <not>
        <os family="windows"/>
      </not>
    </condition>
    <echo>Launching ${module.name}.</echo>
    <exec executable="${default.browser}" spawn="true">
      <arg line ="${extra-args} http://${javaee.server.name}:${javaee.server.port}/${module.name}" />
    </exec>
  </target>

  <target name="package-jar" if="is.jar.module">
    <mkdir dir="${jar.build.dir}"/>

    <!-- Copy in the compiled Classes -->
    <copy todir="${jar.build.dir}">
      <fileset dir="${build.classes.dir}"/>
    </copy>

    <delete file="${app.module}"/>
    <jar jarfile="${app.module}" basedir="${jar.build.dir}" />
    <delete dir="${jar.build.dir}"/>
  </target>

  <!-- Dummy placeholder targets. They can be overridden by application build file -->
  <target name="-pre-compile"/>
  <target name="-post-compile"/>
  <target name="-pre-clean"/>

  <target name="default" depends="compile,-post-compile,package-jar,package-war,copy-dist"/>
  <target name="copy-dist">
    <mkdir dir="${dist.dir}"/>
    <copy todir="${dist.dir}">
      <fileset file="${app.module}"/>
    </copy>
  </target>
  <target name="run" depends="default,deploy,launch"/>

</project>
